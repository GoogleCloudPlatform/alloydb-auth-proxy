# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: sample
on:
  pull_request:
  push:
    branches:
      - main
  pull_request_target:
    types: [labeled]
  schedule:
  - cron:  '0 2 * * *'

# Declare default permissions as read only.
permissions: read-all

jobs:
  # job to run change detection
  changes:
    # run job on proper workflow event triggers (skip job for pull_request event from forks and only run pull_request_target for "tests: run" label)
    if: |
      "${{ (github.event.action != 'labeled' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name) || github.event.label.name == 'tests: run' }}" &&
      ${{ github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: write
      issues: write
    # Set job outputs to values from filter step
    outputs:
      java: ${{ steps.filter.outputs.java }}
      nodejs: ${{ steps.filter.outputs.nodejs }}
      go: ${{ steps.filter.outputs.go }}
      python: ${{ steps.filter.outputs.python }}
    steps:
    - name: Remove PR label
      if: "${{ github.event.action == 'labeled' && github.event.label.name == 'tests: run' }}"
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            await github.rest.issues.removeLabel({
              name: 'tests: run',
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
          } catch (e) {
            console.log('Failed to remove label. Another job may have already removed it!');
          }
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
      id: filter
      with:
        filters: |
          java:
            - 'examples/java/**'
          nodejs:
            - 'examples/nodejs/**'
          go:
            - 'examples/go/**'
          python:
            - 'examples/python/**'
  java:
    # This ensures that the java job execute after the changes job, since it's dependent on
    # that job's output.
    needs: changes
    if: ${{ needs.changes.outputs.java == 'true' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, linux, x64]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@fa2c7e4517ed008b1f73e7e0195a9eecf5582cd4 # v1.11.0
        with:
          java-version: 17

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: google-github-actions/auth@67e9c72af6e0492df856527b474995862b7b6591 # v2.0.0
        with:
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@825196879a077b7efa50db2e88409f44de4635c2 # v2.0.0
      - name: Get Secrets
        id: 'secrets'
        uses: google-github-actions/get-secretmanager-secrets@ae0d4054c32840e2ced71207a9df55161ae3debc # v2.0.0
        with:
          secrets: |-
            ALLOYDB_INSTANCE_NAME:alloydb-connector-testing/ALLOYDB_INSTANCE_NAME
            ALLOYDB_CLUSTER_PASS:alloydb-connector-testing/ALLOYDB_CLUSTER_PASS

      - name: Run lint
        run: |
          cd examples/java
          mvn -P lint checkstyle:check

      - name: Run tests
        env:
          DB_NAME: 'postgres'
          DB_USER: 'postgres'
          DB_PASS: '${{ steps.secrets.outputs.ALLOYDB_CLUSTER_PASS }}'
          ALLOYDB_CONNECTION_NAME: '${{ steps.secrets.outputs.ALLOYDB_INSTANCE_NAME }}'
        run: |
          ./examples/java/run_tests.sh
  nodejs:
    # This ensures that the Node.js job executes after the changes job, since it's dependent on
    # that job's output.
    needs: changes
    if: ${{ needs.changes.outputs.nodejs == 'true' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, linux, x64]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Node
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: 14

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: google-github-actions/auth@67e9c72af6e0492df856527b474995862b7b6591 # v2.0.0
        with:
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@825196879a077b7efa50db2e88409f44de4635c2 # v2.0.0
      - name: Get Secrets
        id: 'secrets'
        uses: google-github-actions/get-secretmanager-secrets@ae0d4054c32840e2ced71207a9df55161ae3debc # v2.0.0
        with:
          secrets: |-
            ALLOYDB_INSTANCE_NAME:alloydb-connector-testing/ALLOYDB_INSTANCE_NAME
            ALLOYDB_CLUSTER_PASS:alloydb-connector-testing/ALLOYDB_CLUSTER_PASS

      - name: Run tests
        env:
          DB_NAME: 'postgres'
          DB_USER: 'postgres'
          DB_PASS: '${{ steps.secrets.outputs.ALLOYDB_CLUSTER_PASS }}'
          ALLOYDB_CONNECTION_NAME: '${{ steps.secrets.outputs.ALLOYDB_INSTANCE_NAME }}'
        run: |
          ./examples/nodejs/run_tests.sh
  go:
    # This ensures that the go job executes after the changes job, since it's dependent on
    # that job's output.
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, linux, x64]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: "1.21"
      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: google-github-actions/auth@67e9c72af6e0492df856527b474995862b7b6591 # v2.0.0
        with:
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@825196879a077b7efa50db2e88409f44de4635c2 # v2.0.0
      - name: Get Secrets
        id: 'secrets'
        uses: google-github-actions/get-secretmanager-secrets@ae0d4054c32840e2ced71207a9df55161ae3debc # v2.0.0
        with:
          secrets: |-
            ALLOYDB_INSTANCE_NAME:alloydb-connector-testing/ALLOYDB_INSTANCE_NAME
            ALLOYDB_CLUSTER_PASS:alloydb-connector-testing/ALLOYDB_CLUSTER_PASS

      - name: Run tests
        env:
          DB_NAME: 'postgres'
          DB_USER: 'postgres'
          DB_PASS: '${{ steps.secrets.outputs.ALLOYDB_CLUSTER_PASS }}'
          ALLOYDB_CONNECTION_NAME: '${{ steps.secrets.outputs.ALLOYDB_INSTANCE_NAME }}'
        run: |
          ./examples/go/run_tests.sh
  python:
    # This ensures that the python job executes after the changes job, since it's dependent on
    # that job's output.
    needs: changes
    if: ${{ needs.changes.outputs.python == 'true' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, linux, x64]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Setup Python 3.11
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: '3.11'

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: google-github-actions/auth@67e9c72af6e0492df856527b474995862b7b6591 # v2.0.0
        with:
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
     
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@825196879a077b7efa50db2e88409f44de4635c2 # v2.0.0
      - name: Get Secrets
        id: 'secrets'
        uses: google-github-actions/get-secretmanager-secrets@ae0d4054c32840e2ced71207a9df55161ae3debc # v2.0.0
        with:
          secrets: |-
            ALLOYDB_INSTANCE_NAME:alloydb-connector-testing/ALLOYDB_INSTANCE_NAME
            ALLOYDB_CLUSTER_PASS:alloydb-connector-testing/ALLOYDB_CLUSTER_PASS

      - name: Run lint
        run: |
          pip install --upgrade pip
          pip install flake8
          cd examples/python
          python -m flake8 .

      - name: Run tests
        env:
          DB_NAME: 'postgres'
          DB_USER: 'postgres'
          DB_PASS: '${{ steps.secrets.outputs.ALLOYDB_CLUSTER_PASS }}'
          ALLOYDB_CONNECTION_NAME: '${{ steps.secrets.outputs.ALLOYDB_INSTANCE_NAME }}'
        run: |
          ./examples/python/run_tests.sh
