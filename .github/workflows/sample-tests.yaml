# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: sample
on:
  pull_request:
  push:
    branches:
      - main
  pull_request_target:
    types: [labeled]
  schedule:
  - cron:  '0 2 * * *'
jobs:
  # job to run change detection
  changes:
    # run job on proper workflow event triggers (skip job for pull_request event from forks and only run pull_request_target for "tests: run" label)
    if: |
      "${{ (github.event.action != 'labeled' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name) || github.event.label.name == 'tests: run' }}" &&
      ${{ github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      java: ${{ steps.filter.outputs.java }}
      python: ${{ steps.filter.outputs.python }}
    steps:
    - name: Remove PR label
      if: "${{ github.event.action == 'labeled' && github.event.label.name == 'tests: run' }}"
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            await github.rest.issues.removeLabel({
              name: 'tests: run',
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
          } catch (e) {
            console.log('Failed to remove label. Another job may have already removed it!');
          }
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          java:
            - 'examples/java/**'
          python:
            - 'examples/python/**'
  java:
    # This ensures that the java job execute after the changes job, since it's dependent on
    # that job's output.
    needs: changes
    if: ${{ needs.changes.outputs.java == 'true' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, linux, x64]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: 'actions/checkout@v3'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 17

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1.0.1'
      - name: Get Secrets
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0'
        with:
          secrets: |-
            ALLOYDB_CONN_NAME:alloydb-connector-testing/ALLOYDB_CONN_NAME
            ALLOYDB_CLUSTER_PASS:alloydb-connector-testing/ALLOYDB_CLUSTER_PASS

      - name: Run lint
        run: |
          cd examples/java
          mvn -P lint checkstyle:check

      - name: Run tests
        env:
          DB_NAME: 'postgres'
          DB_USER: 'postgres'
          DB_PASS: '${{ steps.secrets.outputs.ALLOYDB_CLUSTER_PASS }}'
          ALLOYDB_CONNECTION_NAME: '${{ steps.secrets.outputs.ALLOYDB_CONN_NAME }}'
        run: |
          ./examples/java/run_tests.sh

  python:
    # This ensures that the python job executes after the changes job, since it's dependent on
    # that job's output.
    needs: changes
    if: ${{ needs.changes.outputs.python == 'true' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, linux, x64]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: 'actions/checkout@v3'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}



      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
     
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1.0.1'
      - name: Get Secrets
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0'
        with:
          secrets: |-
            ALLOYDB_CONN_NAME:alloydb-connector-testing/ALLOYDB_CONN_NAME
            ALLOYDB_CLUSTER_PASS:alloydb-connector-testing/ALLOYDB_CLUSTER_PASS

      - name: Run lint
        run: |
          pip install flake8
          cd examples/python
          flake8 .

      - name: Run tests
        env:
          DB_NAME: 'postgres'
          DB_USER: 'postgres'
          DB_PASS: '${{ steps.secrets.outputs.ALLOYDB_CLUSTER_PASS }}'
          ALLOYDB_CONNECTION_NAME: '${{ steps.secrets.outputs.ALLOYDB_CONN_NAME }}'
        run: |
          ./examples/python/run_tests.sh
          
          

